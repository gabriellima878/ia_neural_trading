# Makefile para automatizar tarefas do projeto IA Neural Trading

# Nome do ambiente virtual (ajuste se necessÃ¡rio)
ENV=tf-keras

# Comando para inicializar o ambiente com pyenv
init:
	@echo "ðŸ”§ Ativando ambiente virtual com pyenv..."
	@export PYENV_ROOT="$$HOME/.pyenv" && \
	export PATH="$$PYENV_ROOT/bin:$$PATH" && \
	eval "$$(pyenv init -)" && \
	eval "$$(pyenv virtualenv-init -)" && \
	pyenv activate $(ENV) && \
	echo "âœ… Ambiente ativado com sucesso!"

# Instala dependÃªncias do projeto
install:
	@echo "ðŸ“¦ Instalando dependÃªncias do projeto..."
	@pip install -r requirements.txt

# Inicia o Jupyter Notebook com o ambiente virtual ativo
notebook:
	@echo "ðŸš€ Iniciando Jupyter Notebook com ambiente $(ENV)..."
	@export PYENV_ROOT="$$HOME/.pyenv" && \
	export PATH="$$PYENV_ROOT/bin:$$PATH" && \
	eval "$$(pyenv init -)" && \
	eval "$$(pyenv virtualenv-init -)" && \
	pyenv activate $(ENV) && \
	jupyter notebook

# Limpa arquivos temporÃ¡rios e desnecessÃ¡rios
clean:
	@echo "ðŸ§¹ Limpando arquivos temporÃ¡rios..."
	@find . -name "__pycache__" -type d -exec rm -r {} + || true
	@rm -rf .ipynb_checkpoints
	@rm -f *.pyc
	@rm -f *.pyo
	@rm -f *.DS_Store
	@echo "âœ… Limpeza concluÃ­da."

# Exibe ajuda
help:
	@echo ""
	@echo "ðŸ“˜ Comandos disponÃ­veis:"
	@echo "  make init       â†’ Ativa o ambiente virtual com pyenv"
	@echo "  make install    â†’ Instala as dependÃªncias do projeto (requirements.txt)"
	@echo "  make notebook   â†’ Inicia o Jupyter Notebook no ambiente virtual"
	@echo "  make clean      â†’ Remove arquivos temporÃ¡rios"
	@echo "  make help       â†’ Exibe esta ajuda"
	@echo ""